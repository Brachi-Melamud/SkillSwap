{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass UserService {\n  deleteAccount() {\n    throw new Error('Method not implemented.');\n  }\n  changePassword(currentPassword, newPassword) {\n    throw new Error('Method not implemented.');\n  }\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'api/users'; // Replace with the actual API endpoint for user data\n  }\n\n  getUser(userId) {\n    const url = `${this.baseUrl}/${userId}`;\n    return this.http.get(url);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});\nexport { UserService };","map":{"version":3,"names":["UserService","deleteAccount","Error","changePassword","currentPassword","newPassword","constructor","http","baseUrl","getUser","userId","url","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/brachi/Desktop/skill/full stack/SkillSwap/Frontend/src/app/user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  deleteAccount() {\n    throw new Error('Method not implemented.');\n  }\n  changePassword(currentPassword: string | undefined, newPassword: string | undefined) {\n    throw new Error('Method not implemented.');\n  }\n  private baseUrl = 'api/users'; // Replace with the actual API endpoint for user data\n\n  constructor(private http: HttpClient) { }\n\n  getUser(userId: string): Observable<any> {\n    const url = `${this.baseUrl}/${userId}`;\n    return this.http.get(url);\n  }\n\n  // Implement additional methods for user-related operations:\n  // - updateUser(userId, userData): Observable<any>\n  // - followUser(userId): Observable<any>\n  // - unfollowUser(userId): Observable<any>\n  // - requestSession(userId): Observable<any>\n  // ...\n\n}\n"],"mappings":";;AAIA,MAGaA,WAAW;EACtBC,aAAaA,CAAA;IACX,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACAC,cAAcA,CAACC,eAAmC,EAAEC,WAA+B;IACjF,MAAM,IAAIH,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAGAI,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,WAAW,CAAC,CAAC;EAES;;EAExCC,OAAOA,CAACC,MAAc;IACpB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACH,OAAO,IAAIE,MAAM,EAAE;IACvC,OAAO,IAAI,CAACH,IAAI,CAACK,GAAG,CAACD,GAAG,CAAC;EAC3B;;AAdWX,WAAW,C;mBAAXA,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXhB,WAAW,C;SAAXA,WAAW;EAAAiB,OAAA,EAAXjB,WAAW,CAAAkB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPnB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}